% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fastDist.R
\name{sparseDist}
\alias{sparseDist}
\title{Optimized Distances calculation on sparse matrix}
\usage{
sparseDist(
  X,
  Y = NULL,
  method = "jaccard",
  ncores = 0,
  verbose = T,
  full = F,
  diag = F,
  dist = T
)
}
\arguments{
\item{X}{dgMatrix; a sparse matrix where columns are variables and rows observations.}

\item{Y}{dgMatrix; a sparse matrix where columns are variables and rows observations.}

\item{method}{string; a character string indicating which distance is to be computed. One of "binary" (i.e., jaccard) (default), "fJaccard", "euclidean","manhattan" or "pearson". Default binary}

\item{ncores}{numeric; number of cpu to use. Default value is 0 (i.e., number of cpus is auto detected and available number of cpu minus one are used).}

\item{verbose}{boolean; Show progress bar. Default is TRUE.}

\item{full}{boolean; Compute the full matrix (TRUE) or just low triangle (FALSE). Default is FALSE. This param id ignored when X and Y are used as input. If two matrices are passed as input the output matrix will be always a full matrix.}

\item{diag}{boolean; Compute diagonal. Default is FALSE.}

\item{dist}{boolean; If this parameter is set to FALSE, in the case of binary (i.e.,jaccard), fJaccard and pearson the similarity coefficient instead of the distance is returned . Defaullt value is TRUE and distance value is returned.}
}
\description{
Calculates distance matrices in parallel using multiple threads. Distances are computed among the cols of a sparse data matrix.
Code have been optimaized for highly sparse large matricies.
}
